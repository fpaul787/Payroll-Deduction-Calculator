{"version":3,"sources":["theme.js","Navbar.js","calulate.js","styles.js","NewPayroll.js","App.js","index.js"],"names":["theme","createMuiTheme","typography","useNextVariants","h6","color","fontWeight","palette","background","default","useStyles","makeStyles","root","appBar","position","backgroundColor","Navbar","classes","AppBar","className","elevation","Toolbar","Typography","variant","noWrap","calculate","totalAmt","downPayment","numberOfPayments","remainingAmt","paymentPerPeriod","Math","floor","calculatedDownPayment","round","existingCalculate","existing","Number","remaining_PLUS_existing","remaining_existing","paper","marginTop","spacing","marginBottom","padding","breakpoints","up","title","layout","width","marginLeft","marginRight","form","margin","textField","display","labelRoot","fontSize","input","height","cssOutlinedInput","borderColor","notchedOutline","borderWidth","cssFocused","button","copyButton","colorHighlight","textArea","resize","radio","checked","link","nameStyle","NewPayroll","useState","enteredTotal","setEnteredTotal","periods","setPeriods","setDownPayment","existingAmt","setExisting","setChecked","textAreaValue","setTextAreaValue","validateNumber","total","totalString","toString","test","Paper","component","align","Grid","container","item","xs","TextField","id","label","type","onChange","event","target","value","InputProps","startAdornment","InputAdornment","focused","InputLabelProps","style","labelFocused","FormControlLabel","control","Checkbox","name","sm","FormControl","FormLabel","RadioGroup","row","aria-label","Radio","disableRipple","Button","onClick","tempDownPayment","alert","disabled","el","document","createElement","body","appendChild","select","execCommand","removeChild","href","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b01aa8f.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n    h6: {\r\n      color: \"#d59f00 !important\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  palette: {\r\n    background: {\r\n      default: \"#001530\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  appBar: {\r\n    position: \"relative\",\r\n    backgroundColor: \"#002c63\",\r\n  },\r\n});\r\n\r\nexport default function Navbar() {\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      className={classes.appBar}\r\n      position=\"absolute\"\r\n      color=\"default\"\r\n      elevation={4}\r\n    >\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\r\n          Panther Tech Payroll Deduction Calculator\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","\r\n\r\nexport function calculate(totalAmt, downPayment, numberOfPayments) {\r\n  /** Initial Calculation */\r\n\r\n  var remainingAmt = totalAmt - downPayment;\r\n\r\n  var paymentPerPeriod = remainingAmt / numberOfPayments;\r\n\r\n  /** Clean Calculation with even number */\r\n\r\n  // round payment per period down to nearest dollar\r\n  paymentPerPeriod = Math.floor(paymentPerPeriod);\r\n\r\n  // multiply by number of payments to get remaining\r\n  remainingAmt = paymentPerPeriod * numberOfPayments;\r\n\r\n  // substract total minus remaining to get down payment\r\n  downPayment = Math.round((totalAmt - remainingAmt) * 100) / 100;\r\n\r\n  var calculatedDownPayment = downPayment;\r\n  return { calculatedDownPayment, paymentPerPeriod, remainingAmt };\r\n}\r\n\r\nexport function existingCalculate(totalAmt, downPayment, existing ,numberOfPayments){\r\n   \r\n  var remainingAmt = totalAmt - downPayment + Number(existing);\r\n\r\n  var paymentPerPeriod = remainingAmt / numberOfPayments;\r\n\r\n  /** Clean Calculation with even number */\r\n\r\n  // round payment per period down to nearest dollar\r\n  paymentPerPeriod = Math.floor(paymentPerPeriod)\r\n\r\n  // remaining\r\n  var remaining_PLUS_existing = paymentPerPeriod * numberOfPayments;\r\n\r\n  // remaining amount\r\n  remainingAmt = remaining_PLUS_existing - existing;\r\n\r\n  // substract total minus remaining to get down payment\r\n  downPayment = Math.round((totalAmt - remainingAmt) * 100) / 100;\r\n\r\n  // assign to values for return\r\n\r\n  var calculatedDownPayment = downPayment;\r\n  var remaining_existing = remaining_PLUS_existing;\r\n  return {\r\n    calculatedDownPayment,\r\n    paymentPerPeriod,\r\n    remainingAmt,\r\n    remaining_existing,\r\n  };\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    background: \"#00459a\",\r\n    color: \"#d59f00\",\r\n  },\r\n\r\n  title: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n\r\n  form: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n\r\n  textField: {\r\n    margin: theme.spacing(1),\r\n    \"& input::-webkit-clear-button, & input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\": {\r\n      display: \"none\",\r\n    },\r\n    \"&[type=number]\": {\r\n      \"-moz-appearance\": \"textfield\",\r\n    },\r\n    \"&::-webkit-outer-spin-button\": {\r\n      \"-webkit-appearance\": \"none\",\r\n      margin: 0,\r\n    },\r\n    \"&::-webkit-inner-spin-button\": {\r\n      \"-webkit-appearance\": \"none\",\r\n      margin: 0,\r\n    },\r\n    color: \"#fff\",\r\n  },\r\n\r\n  labelRoot: {\r\n    fontSize: 25,\r\n  },\r\n\r\n  input: {\r\n    height: 60,\r\n  },\r\n\r\n  cssOutlinedInput: {\r\n    \"&$cssFocused $notchedOutline\": {\r\n      borderColor: `black !important`,\r\n    },\r\n  },\r\n\r\n  notchedOutline: {\r\n    borderWidth: \"1px\",\r\n    borderColor: \"#d59f00 !important\",\r\n  },\r\n\r\n  cssFocused: {},\r\n\r\n  button: {\r\n    background: \"#d59f00\",\r\n  },\r\n\r\n  copyButton: {\r\n    background: \"#d59f00\",\r\n    width: 100,\r\n  },\r\n\r\n  colorHighlight: {\r\n    color: \"#d59f00\",\r\n    \"&.Mui-focused\": {\r\n      color: \"#d59f00\",\r\n    },\r\n  },\r\n\r\n  textArea: {\r\n    height: 150,\r\n    width: 325,\r\n    resize: \"none\",\r\n    background: \"#fff\",\r\n    fontSize: 20,\r\n  },\r\n\r\n  radio: {\r\n    \"&$checked\": {\r\n      color: \"#d59f00\",\r\n    },\r\n  },\r\n  checked: {},\r\n\r\n  link: {\r\n    fontSize: \"20px\",\r\n    marginTop: \"10px\",\r\n  },\r\n\r\n  nameStyle: {\r\n    \"&:visited\": {\r\n      color: \"#d59f00\",\r\n    },\r\n  },\r\n}));","import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { calculate, existingCalculate } from \"./calulate\";\r\nimport {useStyles} from \"./styles\"\r\n\r\nexport default function NewPayroll() {\r\n  const classes = useStyles();\r\n  const MINIMUM_PERCENTAGE = 0.1;\r\n  const [enteredTotal, setEnteredTotal] = useState(0);\r\n  const [periods, setPeriods] = useState(12);\r\n  const [downPayment, setDownPayment] = useState(0);\r\n  const [existingAmt, setExisting] = useState(0);\r\n  const [checked, setChecked] = useState(false);\r\n  const [textAreaValue, setTextAreaValue] = useState(\r\n    `Please make some calculations`\r\n  );\r\n\r\n  const validateNumber = (total) => {\r\n    var totalString = total.toString();\r\n    let isnum = /^\\d+(\\.\\d{1,2})?$/.test(totalString);\r\n    return isnum;\r\n  };\r\n\r\n  const handleEnteredTotal = (event) => {\r\n    setEnteredTotal(event.target.value);\r\n  };\r\n\r\n  const handlePeriod = (event) => {\r\n    setPeriods(event.target.value);\r\n  };\r\n\r\n  const handleDownPayment = (event) => {\r\n    setDownPayment(event.target.value);\r\n  };\r\n\r\n  const handleExisting = (event) => {\r\n    setExisting(event.target.value);\r\n  };\r\n\r\n  const handleSubmitFromTotal = () => {\r\n    if (!validateNumber(enteredTotal)) {\r\n      alert(\"Total must be greater or equal to 0\");\r\n      return;\r\n    }\r\n\r\n    // if checked, existing payroll is being calculated\r\n    if (checked) {\r\n      var tempDownPayment = enteredTotal * MINIMUM_PERCENTAGE;\r\n\r\n      let {\r\n        calculatedDownPayment,\r\n        paymentPerPeriod,\r\n        remainingAmt,\r\n        remaining_existing,\r\n      } = existingCalculate(\r\n        enteredTotal,\r\n        tempDownPayment,\r\n        existingAmt,\r\n        periods\r\n      );\r\n\r\n      setTextAreaValue(\r\n        `Total: $${enteredTotal}\\nDown Payment: $${calculatedDownPayment}\\nRemaining: ${remainingAmt}\\nRemaining + Existing: $${remaining_existing}\\nPayment Per ${periods} Periods: $${paymentPerPeriod}`\r\n      );\r\n    } else {\r\n      tempDownPayment = enteredTotal * MINIMUM_PERCENTAGE;\r\n\r\n      let { calculatedDownPayment, paymentPerPeriod, remainingAmt } = calculate(\r\n        enteredTotal,\r\n        tempDownPayment,\r\n        periods\r\n      );\r\n\r\n      setTextAreaValue(\r\n        `Total: $${enteredTotal}\\nDown Payment: $${calculatedDownPayment}\\nRemaining: $${remainingAmt}\\nPayment Per ${periods} Periods: $${paymentPerPeriod}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSubmitFromDownPayment = () => {\r\n    if (!validateNumber(enteredTotal)) {\r\n      alert(\"Total must be greater or equal to 0\");\r\n      return;\r\n    }\r\n\r\n    if (!validateNumber(downPayment)) {\r\n      alert(\"Down Payment must be greater equal to 0\");\r\n      return;\r\n    }\r\n\r\n    if (downPayment < enteredTotal * MINIMUM_PERCENTAGE) {\r\n      alert(\"Down Payment must be greater or equal to 10% of total\");\r\n      return;\r\n    }\r\n\r\n    // existing amount\r\n    if (checked) {\r\n      let {\r\n        calculatedDownPayment,\r\n        paymentPerPeriod,\r\n        remainingAmt,\r\n        remaining_existing,\r\n      } = existingCalculate(enteredTotal, downPayment, existingAmt, periods);\r\n\r\n      setTextAreaValue(\r\n        `Total: $${enteredTotal}\\nDown Payment: $${calculatedDownPayment}\\nRemaining: ${remainingAmt}\\nRemaining + Existing: $${remaining_existing}\\nPayment Per ${periods} Periods: $${paymentPerPeriod}`\r\n      );\r\n    } else {\r\n      let { calculatedDownPayment, paymentPerPeriod, remainingAmt } = calculate(\r\n        enteredTotal,\r\n        downPayment,\r\n        periods\r\n      );\r\n\r\n      setTextAreaValue(\r\n        `Total: $${enteredTotal}\\nDown Payment: $${calculatedDownPayment}\\nRemaining: $${remainingAmt}\\nPayment Per ${periods} Periods: $${paymentPerPeriod}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    const el = document.createElement(\"textarea\");\r\n    el.value = textAreaValue;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(el);\r\n  };\r\n\r\n  return (\r\n    <main className={classes.layout}>\r\n      <Paper elevation={1} className={classes.paper}>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          className={classes.title}\r\n        >\r\n          New Payroll Deduction\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"total\"\r\n              variant=\"outlined\"\r\n              label=\"Total\"\r\n              type=\"number\"\r\n              className={classes.textField}\r\n              onChange={handleEnteredTotal}\r\n              InputProps={{\r\n                className: classes.input,\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <span className={classes.colorHighlight}>$</span>\r\n                  </InputAdornment>\r\n                ),\r\n                classes: {\r\n                  root: classes.cssOutlinedInput,\r\n                  focused: classes.cssFocused,\r\n                  notchedOutline: classes.notchedOutline,\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                style: { color: \"#d59f00\" },\r\n                classes: {\r\n                  root: classes.labelRoot,\r\n                  focused: classes.labelFocused,\r\n                },\r\n              }}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={checked}\r\n                  onChange={() => {\r\n                    setChecked(!checked);\r\n                  }}\r\n                  name=\"checkedA\"\r\n                  style={{\r\n                    color: \"#d59f00\",\r\n                  }}\r\n                />\r\n              }\r\n              label=\"Existing Payroll\"\r\n            />\r\n          </Grid>\r\n          {checked ? (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"existing\"\r\n                variant=\"outlined\"\r\n                label=\"Existing\"\r\n                type=\"number\"\r\n                className={classes.textField}\r\n                onChange={handleExisting}\r\n                InputProps={{\r\n                  className: classes.input,\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <span className={classes.colorHighlight}>$</span>\r\n                    </InputAdornment>\r\n                  ),\r\n                  classes: {\r\n                    root: classes.cssOutlinedInput,\r\n                    focused: classes.cssFocused,\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                }}\r\n                InputLabelProps={{\r\n                  style: { color: \"#d59f00\" },\r\n                  classes: {\r\n                    root: classes.labelRoot,\r\n                    focused: classes.labelFocused,\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n\r\n          <Grid style={{ marginLeft: \"10px\" }} item xs={12} sm={8}>\r\n            <FormControl component=\"fieldset\" className={classes.form}>\r\n              <FormLabel className={classes.colorHighlight} component=\"legend\">\r\n                Periods\r\n              </FormLabel>\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"period\"\r\n                name=\"period\"\r\n                value={periods.toString()}\r\n                onChange={handlePeriod}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"12\"\r\n                  control={\r\n                    <Radio\r\n                      disableRipple\r\n                      classes={{\r\n                        root: classes.radio,\r\n                        checked: classes.checked,\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"12\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"16\"\r\n                  control={\r\n                    <Radio\r\n                      classes={{\r\n                        root: classes.radio,\r\n                        checked: classes.checked,\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"16\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"20\"\r\n                  control={\r\n                    <Radio\r\n                      classes={{\r\n                        root: classes.radio,\r\n                        checked: classes.checked,\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"20\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"10px\" }} item xs={12} sm={8}>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={handleSubmitFromTotal}\r\n              variant=\"contained\"\r\n            >\r\n              Calculate From Total\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              id=\"downPayment\"\r\n              variant=\"outlined\"\r\n              label=\"Down Payment\"\r\n              type=\"number\"\r\n              onChange={handleDownPayment}\r\n              className={classes.textField}\r\n              InputProps={{\r\n                className: classes.input,\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <span className={classes.colorHighlight}>$</span>\r\n                  </InputAdornment>\r\n                ),\r\n                classes: {\r\n                  root: classes.cssOutlinedInput,\r\n                  focused: classes.cssFocused,\r\n                  notchedOutline: classes.notchedOutline,\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                style: { color: \"#d59f00\" },\r\n                classes: {\r\n                  root: classes.labelRoot,\r\n                  focused: classes.labelFocused,\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"10px\" }} item xs={12} sm={8}>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={handleSubmitFromDownPayment}\r\n              variant=\"contained\"\r\n            >\r\n              Calculate From Down Payment\r\n            </Button>\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"10px\" }} item xs={12} sm={8}>\r\n            <textarea\r\n              className={classes.textArea}\r\n              disabled\r\n              value={textAreaValue}\r\n            />\r\n          </Grid>\r\n          <Grid style={{ marginLeft: \"10px\" }} item xs={12} sm={8}>\r\n            <Button\r\n              onClick={copyToClipboard}\r\n              className={classes.copyButton}\r\n              variant=\"contained\"\r\n            >\r\n              Copy\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{ marginLeft: \"20%\" }} item xs={12} sm={8}>\r\n          <Typography className={classes.link}>\r\n            Made with ❤ by\r\n            <a className={classes.nameStyle} href=\"https://www.frantzpaul.tech/\"> Frantz Paul</a>\r\n          </Typography>\r\n        </Grid>\r\n      </Paper>\r\n    </main>\r\n  );\r\n}\r\n","import './App.css';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport theme from \"./theme\";\r\nimport Navbar from \"./Navbar\";\r\nimport NewPayroll from './NewPayroll';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Navbar />\r\n        <NewPayroll />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}